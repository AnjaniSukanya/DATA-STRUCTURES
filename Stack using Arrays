#include<stdio.h> 
#include<stdlib.h>
#define MAX 5
int top = -1;
int A[MAX];
void push();
void pop();
void peek();
int is_empty();
int is_full();
int length();
void display();
void main(){
        int ch, k;
        while(1){
                printf("\n1.push\n2.pop\n3.peek\n4.length\n5.display\n6.exit");
                printf("\nEnter option : ");
                scanf("%d",&ch);
                switch(ch) {
                        case 1 : push();
                                 break;
                        case 2 : pop();
                                 break;
                        case 3 : peek();
                                 break;
                        case 4 : printf("The length of the list is %d",length());
                                 break;
                        case 5 : display();
                                 break;
                        case 6 : exit(0);
                                 break;
                }
        }
}
void push(){
        int x;
        printf("Enter value:");
        scanf("%d",&x);
        if(is_full() == 1)
               printf("Stack is full");
        else {
                A[++top]=x;
        }
}

void pop() {
        if(is_empty() == 1)
                printf("Stack is empty");
        else {
                A[top];
                printf("The popped element is %d",A[top]);
                top--;
        }
}

void display() {
        if(top>=0){
                printf("The elements are : ");
                for(int i=0;i<=top;i++){
                        printf("%d ",A[i]);
                }
        }
        else {
                printf("Stack is empty");
        }
}

void peek() {
        if(is_empty() == 1)
            printf("Stack is empty");
        else
                printf("The peek element is %d",A[top]);
}

int is_empty() {
        if(length() == 0) {
                return 1;
        }
        else
                return 0;
}

int length() {
        int count = 0;
        if(top>=0){
                for(int i = 0;i <=top ;i++)
                        count++;
        }
        return count;
}

int is_full() {
        if(top == MAX-1)
               return 1;
        else
                return 0;
}
